# coding=utf-8
# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Private distribution for NDA customers only. Governed by license terms at https://preview.e4k.dev/docs/use-terms/
# --------------------------------------------------------------------------------------------
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: diagnostics_service.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from opentelemetry.proto.metrics.v1 import metrics_pb2 as opentelemetry_dot_proto_dot_metrics_dot_v1_dot_metrics__pb2
from opentelemetry.proto.trace.v1 import trace_pb2 as opentelemetry_dot_proto_dot_trace_dot_v1_dot_trace__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x64iagnostics_service.proto\x12\x19\x64iagnostics_service_proto\x1a,opentelemetry/proto/metrics/v1/metrics.proto\x1a(opentelemetry/proto/trace/v1/trace.proto\"\xda\x01\n\x07Request\x12>\n\nput_traces\x18\x01 \x01(\x0b\x32(.opentelemetry.proto.trace.v1.TracesDataH\x00\x12\x43\n\nget_traces\x18\x02 \x01(\x0b\x32-.diagnostics_service_proto.TraceRetrievalInfoH\x00\x12\x42\n\x0bput_metrics\x18\x03 \x01(\x0b\x32+.opentelemetry.proto.metrics.v1.MetricsDataH\x00\x42\x06\n\x04type\"_\n\x08Response\x12K\n\x0fretrieved_trace\x18\x01 \x01(\x0b\x32\x30.diagnostics_service_proto.RetrievedTraceWrapperH\x00\x42\x06\n\x04type\"\'\n\x12TraceRetrievalInfo\x12\x11\n\ttrace_ids\x18\x01 \x03(\x0c\"\x88\x01\n\x15RetrievedTraceWrapper\x12\x37\n\x05trace\x18\x01 \x01(\x0b\x32(.opentelemetry.proto.trace.v1.TracesData\x12\x1b\n\x13\x63urrent_trace_count\x18\x02 \x01(\r\x12\x19\n\x11total_trace_count\x18\x03 \x01(\rb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'diagnostics_service_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_REQUEST']._serialized_start=145
  _globals['_REQUEST']._serialized_end=363
  _globals['_RESPONSE']._serialized_start=365
  _globals['_RESPONSE']._serialized_end=460
  _globals['_TRACERETRIEVALINFO']._serialized_start=462
  _globals['_TRACERETRIEVALINFO']._serialized_end=501
  _globals['_RETRIEVEDTRACEWRAPPER']._serialized_start=504
  _globals['_RETRIEVEDTRACEWRAPPER']._serialized_end=640
# @@protoc_insertion_point(module_scope)
