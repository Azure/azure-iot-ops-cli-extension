# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

# default tox environments to run
[tox]
skip_missing_interpreters = true
envlist =
    clean
    lint
    python
    report

# base dependencies (basically dev_requirements)
[base]
distdir={toxworkdir}/build
deps =
    -r dev_requirements.txt
description =
    # py{x} determines python version for environment.
    #    A valid interpreter must be installed (and added to PATH)
    #    for each selected version, otherwise the run will be skipped
    # list all available tox environments with: `tox -av`
    python: Local Python
    py39: Python 3.9
    py310: Python 3.10
    py311: Python 3.11
    py312: Python 3.12

# lint - flake8 and pylint
[testenv:lint]
description = run linter
deps =
    {[base]deps}
    azure-cli
commands =
    flake8 azext_edge/ --statistics --config=setup.cfg
    pylint azext_edge/ --rcfile=.pylintrc

# unit tests
[testenv:py{thon,39,310,311,312}]
skip_install = True
description =
    {[base]description}
deps =
    # base deps
    {[base]deps}
    # azure-cli deps
    azure-cli
setenv =
    PYTHONPATH={envsitepackagesdir}/azure-cli-extensions/azure-iot-ops
commands =
    python --version
    # install to tox extension dir
    pip install -U --target {envsitepackagesdir}/azure-cli-extensions/azure-iot-ops .
    # validate az and extension version
    az -v
    pytest -k "_unit.py" ./azext_edge/tests/utility \
    --cov=azext_edge/edge --cov-config .coveragerc --cov-append --cov-report term:skip-covered --cov-report json \
    --junitxml=junit/test-aziotops-ext-unit.xml {posargs}

# integration tests
[testenv:python-{init,e2e,rpsaas,wlif,edge,all}-int]
skip_install = True
description =
    {[base]description}
    init: ops init / create
    wlif: workload identity setup required
    e2e: only e2e pipeline
    rpsaas: only rpsaas
    edge: all non-rpsaas
    all: all non-init
    int: integration tests
deps =
    # base deps
    {[testenv:python]deps}
    pytest-randomly # for pytest-randomly to distribute tests correctly to pytest-xdist
    psutil # for pytest-xdist to distribute logical cores
passenv =
    # pass all env vars with this prefix to tox
    azext_edge_*
setenv =
    # You can temporarily add variables here to modify your tests
    # azext_edge_skip_init=true
    PYTHONPATH={envsitepackagesdir}/azure-cli-extensions/azure-iot-ops
    init: SCENARIO="init_scenario_test"
    e2e: SCENARIO="e2e"
    rpsaas: SCENARIO="rpsaas"
    wlif: SCENARIO="require_wlif_setup"
    edge: SCENARIO="not rpsaas and not init_scenario_test"
    all: SCENARIO="not init_scenario_test and not require_wlif_setup"
commands =
    python --version
    # install to tox extension dir
    pip install -U --target {envsitepackagesdir}/azure-cli-extensions/azure-iot-ops .
    # validate az and extension version
    az -v
    # run tests (do not reorder execution with randomly)
    pytest --randomly-dont-reorganize -vv -k "_int.py" -m {env:SCENARIO} ./azext_edge/tests \
    --cov=azext_edge/edge --cov-config .coveragerc --cov-append --cov-report term:skip-covered --cov-report json \
    --durations 0 --junitxml=junit/JUnit.xml {posargs}

# code coverage
[testenv:report]
deps = coverage
allowlist_externals = coverage
skip_install = true
commands =
    coverage report
    coverage html
    coverage json

# clean up code coverage
[testenv:clean]
deps = coverage
allowlist_externals = coverage
skip_install = true
commands = coverage erase